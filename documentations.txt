------------- HTTP METHODS (Hyper text tranfer protocol) -----------------------------------

# What are HTTP Header?

* Metadata -> Key-value sent along with req & res

* Caching , Authentication , manage State
  x-prefix -> 2012(x-deprecated)

* Req Header - From Client
* Res Header - From Server
* Representation Header - encoding / compression
* Payload Header - Data

# Most Common Headers

* Accept : application/json
* User-Agent
* Authorization
* Content-type
* Cookie
* Cache-control

#CORS

* Access-Control-Allow-Origin
* Access-Control-Allow-Credentials
* Access-Control-Allow-METHODS

# Security

* Cross-Origin-Embedder-Policy
* Cross-Origin-Opener-Policy
* Content-Security-Policy
* X-XSS-Protection


# HTTP METHODS
 Basic set of operations that can be used to interact with Server

* GET - Retrieve a resource
* HEAD - No Message body (Response headers only)
* OPTIONS - What operations are available
* TRACE - Loopback test (get some data)
* DELETE - Remove a resource
* PUT - Replace a resource
* POST - Intract with resource (Mosly Add)
* PATCH - Change part of a resource

 ______________________
|                      | 
| # HTTP STATUS CODE   |
|                      |
| * 1xx - Information  |
| * 2xx - Success      |
| * 3xx - Redirection  |
| * 4xx - Client Error |
| * 500 - Server Error |
|______________________|

100 - Continue                 400 - Bad Request
102 - Processing               401 - Unauthorized
200 - OK                       402 - Payment Required
201 - Created                  404 - Not Found
202 - Accepted                 500 - Internal Server Error
307 - Temporary Redirection    504 - Gateway timeout
308 - Permanent Redirection

# Register Users Steps

1. Register Form Open Krwana h 
2. User se details fill krwani h form pr (Frontend se)
3. Validation Check - Not Empty
4. Check User Already Exists Or Not (By Email Or Username)  
5. Check for images , check for avatar
6. Upload image to cloudinary, avatar
7. Create user object - Create entry in Db
8. Remove password and refresh token field from Response
9. Check for user creation successfully or not
10. return Response


# Access Token & Refresh Token

* Use (User ko bar bar apna email or password na dena pade)

* Gmail mai dono token use hote h , 
  Dono token exactly same hota h, unko generate krne k tarika bhi same hota h,
  sirf or sirf fark aata h ki expire kb hota h

* Access Token usually short lived hote headers ( Example -  Authenticated & login (file access) - 15 min )

* Refresh Token Long Lived hote h  ( Db mai bhi save hota h or user ko bhi diya jata h & validate toh access  
  token se he krte h or kehte h bar bar pssword dalne ki jarurt nahi h apke pass yeh refresh token h toh end point hit krdo waha se agr dono k refresh token same h toh hum man jaenge or db apko new access token de dega  )


# Login Todos

* Take req from user with user id || email and password.
* Check Any Filed empty or not.
* Check Details With db correct or not.
* If details are wrong then show a message to enter a correct details.
* If details enter correct.
* create access token & refresh token.
* Send cookies 
* User successfully Logged In.


# subscription Schema

   -------------       -------------
  | subscriber  |     | Channel     |
   -------------       -------------

   User -> a, b, c, d 
   Channel -> CAC, HCC, FCC

# documents

   ----------------       ----------------
  | subscriber -> d|     | subscriber -> a|
  | Channel -> CAC |     | Channel -> HCC |
   ----------------       ----------------

   ----------------       ----------------
  | subscriber -> b|     | subscriber -> b|
  | Channel -> CAC |     | Channel -> HCC |
   ----------------       ----------------

   ----------------       ----------------
  | subscriber -> c|     | subscriber -> c|
  | Channel -> CAC |     | Channel -> HCC |
   ----------------       ----------------



# How to count channel subscribers (Hume kitno ne subscribe kiya h)

* Hum user k document mai jo channel hoga usko count karna h , then jis jis me document mai channel hoga us document ko count karenge.

# Humne kitno ko subscribe kiya h uska count kese karenge

* Hum document mai dekhenge ki subscribe value kaha kaha h uske channel k document ko count kr lenge


# Mongodb Aggregation Pipelines

* Yeh ek stages hoti h, 1st stage 2nd stage 3rd stage.
* Apne jo bhi ek stage pr filtering (condition) laga de ki mujhe 50 documents set do toh next stage pr jaenge toh next stage ki liye 50 documents he data set h.


* Aggregation Pipeline Example

db.orders.aggregate( [
   // Stage 1: Filter pizza order documents by pizza size
   {
      $match: { size: "medium" }
   },
   // Stage 2: Group remaining documents by pizza name and calculate total quantity
   {
      $group: { _id: "$name", totalQuantity: { $sum: "$quantity" } }
   }
] )

# document ko join krne k liye mongodb aggregate mai 

      [
         {
            $lookup: {
               from : collection,        //"author"
               localField: field,        // "author_id"
               foreignField: field,      // "_id"
               as: result                // "author_details"
            }
         },
         {
            // addField new fields add kr sakta h
            $addFields: {
               author_details: {
                  $first: "$author_details"        //2nd method - $aarElemAt: ["$author_details", 0]
               }
            }
         }
      ]

* req.user._id  // mongodb id k string deta h, jab hum mongoose mai use krte hain toh mongoose khudse  he    ObjectId mai convert kr deta h

* aggregate pipleline mai chize direct jati h, toh mongoose wala kam nhi hota isliye hume string ko ObjectId mai convert krna padta hain
 
 example : $match: { _id: new mongoose.types.ObjectId(req.user._id)}